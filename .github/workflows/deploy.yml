name: Deploy Famlink Stack

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS \
            --password-stdin ${{ secrets.AWS_ACCT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker Image
        run: docker build -t famlink .

      - name: Tag Docker Image
        run: docker tag famlink:latest ${{ secrets.AWS_ACCT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/famlink:latest

      - name: Push Docker Image
        run: docker push ${{ secrets.AWS_ACCT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/famlink:latest

      - name: CDK Bootstrap
        run: cdk bootstrap || true

      - name: Deploy CDK Stack
        run: cdk deploy --app --require-approval never

      # Run migrations
      - name: Run Laravel Migrations
        run: |
          CLUSTER_NAME="FamLinkCluster"   # must match your CDK ECS cluster name
          SERVICE_NAME="FamlinkService"   # must match your CDK ECS service name
          CONTAINER_NAME="web"            # must match container name in CDK task definition

          TASK_ARN=$(aws ecs list-tasks \
            --cluster $CLUSTER_NAME \
            --service-name $SERVICE_NAME \
            --desired-status RUNNING \
            --query 'taskArns[0]' \
            --output text)

          echo "Running migrations on task: $TASK_ARN"

          aws ecs execute-command \
            --cluster $CLUSTER_NAME \
            --task $TASK_ARN \
            --container $CONTAINER_NAME \
            --command "php artisan migrate --force" \
            --interactive
